#include "mediaplayer.h"

#include <QLabel>
#include <QPushButton>
#include <QSlider>
#include <QGridLayout>
#include <QVideoWidget>
#include <QMediaPlaylist>
#include <QProgressBar>
#include <QHBoxLayout>
#include <QMouseEvent>
#include <QPropertyAnimation>

#ifdef MP_ONLY_LOCAL
#  include <QFile>
#  include <QDir>
#  include <QFileInfo>
#  include "inetfile.h"
#endif

//! Класс закрытых данных.
/*! Класс скрывает все данные класса MediaPlayer */
class MediaPlayer::Data : public QObject
{
public:
  MediaPlayer *own;         //!< Внешний объект.
  QGridLayout *lay;         //!< Лайоут MediaPlayer'а.
  QLabel      *issue;       //!< Текстовое сообщение или об ошибке, или необходимости подождать.
  QVideoWidget*video;       //!< Область вывода видео.
  QFrame      *bottomCtrls; //!< Нижняя панель элементов контроля.
  QHBoxLayout *bottomLay;   //!< Лайаут нижней панели.
  QPushButton *play;        //!< Кнопка "play".
  QPushButton *pause;       //!< Кнопка "pause".
  QPushButton *stop;        //!< Кнопка "stop".
  QPropertyAnimation        //!  Анимация "выдвигания" нижней панели.
              *bottomCtrlAnimation;
  int bottomCtrlsHeight;    //!< Высота нижней панели.

  QSlider     *position;    //!< Позиция в фильме.
  QSlider     *volume;      //!< Громкость проигрывания.
  QMediaPlayer*player;      //!< Проигрыватель.
  QMediaPlaylist
              *list;        //!< Список проигрывания.

#ifdef MP_ONLY_LOCAL
  QFile  *cacheFile;
  InetFile        *loader;
  InetFileTaskId  taskId;
#endif
                            //!  Конструктор.
  explicit Data(MediaPlayer *owner):QObject(owner), own(owner), lay(0), issue(0), video(0),
    bottomCtrls(0), bottomLay(0), play(0), pause(0), stop(0), bottomCtrlAnimation(0),
    bottomCtrlsHeight(30), position(0), volume(0), player(0), list(0)
#ifdef MP_ONLY_LOCAL
    ,cacheFile(0), loader(0)
#endif
  {}
      //! Размер файла иконки play.
  static const quint32 iPlayLen = 985;
      //! Файл иконки play.
  static const unsigned char iPlay[iPlayLen];
      //! Размер файла иконки pause.
  static const quint32 iPauseLen = 1028;
      //! Файл иконки pause.
  static const unsigned char iPause[iPauseLen];
      //! Размер файла иконки stop.
  static const quint32 iStopLen = 1006;
      //! Файл иконки stop.
  static const unsigned char iStop[iStopLen];
      //! Сообщение о готовности к работе.
  static const QString sPrompt;
      //! Сообщение о процессе загрузки.
  static const QString sLoading;
      //! Сообщение об ошибке.
  static const QString sError;
protected:
      //! Отслеживает перемещение мыши по окну вывода фильма, и отображает нижнюю панель.
  bool eventFilter(QObject *o, QEvent *ev) {
    if ( video && video->isVisible() ) {
      QPoint p = own->mapFromGlobal(QCursor::pos());
      if (p.y() >= own->height()-bottomCtrlsHeight) {
        if (!bottomCtrls->isVisible()) {
          bottomCtrlAnimation->setStartValue(QRect(0, own->height()-2, own->width(), 2));
          bottomCtrlAnimation->setEndValue(QRect(0, own->height()-bottomCtrlsHeight, own->width(), bottomCtrlsHeight));
          bottomCtrlAnimation->setDuration(500);
          bottomCtrls->show();
          bottomCtrlAnimation->start();
        }
      } else {
        if (player->state()==QMediaPlayer::PlayingState)
          bottomCtrls->hide();
      }
    }
    return QObject::eventFilter(o, ev);
  }
};

const QString MediaPlayer::Data::sPrompt = QString::fromUtf8("<font size=26>Media player.<br>Ready to Open</font>");
const QString MediaPlayer::Data::sLoading = QString::fromUtf8("<font size=26 color=green>Wait please. Loading...</font>");
const QString MediaPlayer::Data::sError = QString::fromUtf8("<font size=26 color=red>Can't open this Video.</font>");

MediaPlayer::MediaPlayer(QWidget *parent):
  QFrame(parent), d(new Data(this))
{
  try {
    setFrameShadow(Sunken);
    setFrameShape(Panel);
    setLayout(d->lay = new QGridLayout());
    d->lay->setMargin(0);
    d->lay->addWidget(d->video = new QVideoWidget(this), 1, 1, 2, 1);
    d->lay->addWidget(d->issue = new QLabel(this), 1, 1, 2, 1);
    d->lay->addWidget(d->bottomCtrls = new QFrame(this), 2, 1);
    d->bottomCtrls->setLayout(d->bottomLay = new QHBoxLayout());
    d->bottomLay->setMargin(2);
    d->bottomLay->addWidget(d->play = new QPushButton(this));
    d->bottomLay->addWidget(d->pause = new QPushButton(this));
    d->bottomLay->addWidget(d->stop = new QPushButton(this));
    d->bottomLay->addWidget(d->position = new QSlider(this), 999);
    d->lay->addWidget(d->volume = new QSlider(this), 1, 2);

    d->bottomCtrlAnimation = new QPropertyAnimation(d->bottomCtrls, "geometry");
    d->player = new QMediaPlayer(this);
    d->list = new QMediaPlaylist(this);

    d->player->setMedia(d->list);
    d->player->setVideoOutput(d->video);

    d->bottomCtrlsHeight = d->bottomCtrls->height()+7;
    d->video->installEventFilter(d);

    d->lay->setRowStretch(1, 999);

    QPixmap img;
    if (!img.loadFromData(Data::iPlay, Data::iPlayLen)) {
      qWarning()<<"MediaPlayer don't load picture play";
      d->play->setText(">");
    } else d->play->setIcon(img);
    d->play->setFlat(true);
    if (!img.loadFromData(Data::iPause, Data::iPauseLen)) {
      qWarning()<<"MediaPlayer don't load picture pause";
      d->pause->setText("||");
    } else d->pause->setIcon(img);
    d->pause->setFlat(true);
    if (!img.loadFromData(Data::iStop, Data::iStopLen)) {
      qWarning()<<"MediaPlayer don't load picture stop";
      d->stop->setText("[#]");
    } else d->stop->setIcon(img);
    d->stop->setFlat(true);
    d->position->setOrientation(Qt::Horizontal);
    d->volume->setRange(0, 100);
    d->volume->setValue(100);
    d->issue->setAlignment(Qt::AlignCenter);
    d->issue->setText(MediaPlayer::Data::sPrompt);

    connect(d->play, SIGNAL(clicked(bool)), d->player, SLOT(play()));
    connect(d->pause, SIGNAL(clicked(bool)), d->player, SLOT(pause()));
    connect(d->stop, SIGNAL(clicked(bool)), d->player, SLOT(stop()));

    connect(d->player, SIGNAL(error(QMediaPlayer::Error)), this, SLOT(error(QMediaPlayer::Error)));
    connect(d->player, SIGNAL(durationChanged(qint64)), this, SLOT(durationChanged(qint64)));
    connect(d->player, SIGNAL(positionChanged(qint64)), this, SLOT(positionChanged(qint64)));
    connect(d->player, SIGNAL(volumeChanged(int)), d->volume, SLOT(setValue(int)));
    //  connect(player,SIGNAL);

    connect(d->position, SIGNAL(sliderMoved(int)), this, SLOT(positionMoved(int)));
    connect(d->volume, SIGNAL(valueChanged(int)), d->player, SLOT(setVolume(int)));



  } catch(...) {
    delete d->list;
    delete d->player;
    delete d->bottomCtrlAnimation;
    delete d->volume;
    delete d->position;
    delete d->stop;
    delete d->pause;
    delete d->play;
    delete d->bottomLay;
    delete d->bottomCtrls;
    delete d->video;
    delete d->lay;
    throw;
  }
}

QSize MediaPlayer::sizeHint() const
{
  return d->video->sizeHint();
}

MediaPlayer::~MediaPlayer()
{
  d->video->removeEventFilter(d);
  delete d->list;
  delete d->player;
  delete d->bottomCtrlAnimation;
  delete d->volume;
  delete d->position;
  delete d->stop;
  delete d->pause;
  delete d->play;
  delete d->bottomLay;
  delete d->bottomCtrls;
  delete d->video;
  delete d->lay;
#ifdef MP_ONLY_LOCAL
  delete d->loader;
  if (d->cacheFile) d->cacheFile->remove();
  delete d->cacheFile;
#endif
  delete d;
}

void MediaPlayer::playMedia(const QString &path)
{
  d->issue->setText(MediaPlayer::Data::sLoading);
  d->issue->show();
  d->issue->raise();
  d->video->hide();
  d->list->clear();
  QUrl addr = QUrl(path);
#ifdef MP_ONLY_LOCAL
  if (addr.isLocalFile()) {
#endif
  d->list->addMedia(addr);
  d->list->setCurrentIndex(0);
  d->player->play();
  d->player->pause();
  d->bottomCtrls->show();
#ifdef MP_ONLY_LOCAL
  } else {
    try {
      if (!d->loader) d->loader = new InetFile(this);
      d->loader->join(this, SLOT(fileLoaded(InetFileTaskId)), SLOT(fileLoadErr(InetFileTaskId, QString)));
    } catch (...) {
      delete d->loader;
      d->issue->setText(MediaPlayer::Data::sError);
      d->loader = 0;
      return;
    }
    try {
      if (d->cacheFile) {
        d->cacheFile->remove();
        delete d->cacheFile;
      }
      QString name = addr.fileName();
      const QString templatename = QDir::tempPath()+QDir::separator()
          +QFileInfo(name).completeBaseName()+"%1."+QFileInfo(name).suffix();
      do {
        name = templatename.arg(qrand(), 0, 16);
      } while (QFile::exists(name));
      d->cacheFile = new QFile(name);
      if (!d->cacheFile->open(QFile::ReadWrite)) {

      }
    } catch (...) {
      d->issue->setText(MediaPlayer::Data::sError);
      d->cacheFile = 0;
      return;
    }
    d->taskId = d->loader->newTask(path, d->cacheFile);
  }
#endif
}

void MediaPlayer::setVisible(bool visible)
{
  if (!visible) {
    d->player->pause();
    //d->player->stop();
  }
  QFrame::setVisible(visible);
}

void MediaPlayer::error(QMediaPlayer::Error error)
{
  qWarning()<<Q_FUNC_INFO<<"error:"<<error<<"("<<((int)error)<<")"<<d->player->errorString();
  d->bottomCtrls->hide();
  d->issue->setText(MediaPlayer::Data::sError);
  d->issue->show();
  d->issue->raise();
}

void MediaPlayer::durationChanged(qint64 duration)
{
  d->issue->hide();
  d->video->show();
  d->position->setEnabled(d->player->isSeekable());
  d->position->setMaximum(duration);
  //resize(d->video->sizeHint());
  setMinimumHeight(d->video->sizeHint().height());
}

void MediaPlayer::positionChanged(qint64 position)
{
  d->position->setValue(position);
}

void MediaPlayer::positionMoved(int position)
{
  d->player->setPosition(position);
}

#ifdef MP_ONLY_LOCAL
void MediaPlayer::fileLoaded(const InetFileTaskId &id)
{
  if (id == d->taskId && d->cacheFile) {
    d->loader->rmTask(id);
    //d->cacheFile->flush();
    //d->cacheFile->seek(0);
    QString name = d->cacheFile->fileName();
    d->cacheFile->close();
    delete d->cacheFile;
    d->cacheFile = 0;
    qDebug()<<"playing file:"<<name;
    d->list->addMedia(QUrl(name));
    d->list->setCurrentIndex(0);
    d->player->play();
    d->player->pause();
    d->bottomCtrls->show();
  }
}

void MediaPlayer::fileLoadErr(const InetFileTaskId &id, const QString &/*errorString*/)
{
  if (id == d->taskId) {
    d->loader->rmTask(id);
    d->issue->setText(MediaPlayer::Data::sError);
    d->issue->show();
    d->issue->raise();
  }
}
#endif

// Дальше идут только картинки. Если ничего не спрятано...

const unsigned char MediaPlayer::Data::iStop[] = {
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x0,0x18,0x0,0x0,0x0,0x18,0x8,0x6,0x0,0x0,0x0,0xe0,0x77,0x3d,0xf8,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xb,0x13,0x0,0x0,0xb,0x13,
  0x1,0x0,0x9a,0x9c,0x18,0x0,0x0,0x0,0x20,0x63,0x48,0x52,0x4d,0x0,0x0,0x7a,
  0x25,0x0,0x0,0x80,0x83,0x0,0x0,0xf9,0xff,0x0,0x0,0x80,0xe9,0x0,0x0,0x75,
  0x30,0x0,0x0,0xea,0x60,0x0,0x0,0x3a,0x98,0x0,0x0,0x17,0x6f,0x92,0x5f,0xc5,
  0x46,0x0,0x0,0x3,0x74,0x49,0x44,0x41,0x54,0x78,0xda,0xd4,0x96,0x4b,0x6f,0x1c,
  0x45,0x10,0xc7,0xff,0x55,0xdd,0x33,0x3b,0xbb,0x3b,0xb3,0xeb,0x7d,0xd8,0xf2,0x4b,
  0x36,0x8b,0x91,0x63,0xc2,0x9,0x10,0x17,0x8,0x47,0x72,0x44,0x42,0xe2,0x88,0xf8,
  0xa,0x7c,0x4,0x14,0x3e,0x0,0x27,0xf8,0x2,0xb9,0x82,0x84,0x94,0x63,0x40,0x8,
  0x9,0xe,0x8,0x5,0x12,0x29,0xe,0x4,0x64,0xc5,0xc1,0xc4,0x6f,0xaf,0xbd,0x3b,
  0x3b,0x3b,0xef,0xe9,0xe2,0x10,0xc7,0x38,0xc,0x89,0xb2,0x87,0x1c,0xa8,0x5b,0xf7,
  0x74,0xd7,0x4f,0xff,0xaa,0xea,0xaa,0x21,0x11,0xc1,0xf3,0x34,0xc6,0x73,0x36,0x7d,
  0x7e,0x71,0x99,0xa8,0xc7,0xc0,0x3b,0x15,0x0,0xf6,0xe9,0x47,0x6,0x40,0xff,0xba,
  0x24,0x0,0xa,0x0,0xe6,0x74,0x5d,0x3,0xb0,0xd0,0xf5,0xd0,0x7e,0xa1,0x8b,0x7b,
  0x37,0x36,0xbf,0xfe,0x5c,0x64,0xf3,0xd1,0x59,0x7a,0x14,0xa2,0xf,0x89,0x7a,0xa9,
  0xe6,0x9b,0x6b,0x2f,0x36,0xea,0x8b,0x2d,0x3b,0xd2,0x71,0x11,0xe5,0xa3,0x2c,0xcc,
  0x83,0x3c,0x4a,0xa3,0x3c,0xc,0xe2,0xe2,0xc8,0xcf,0xa5,0x1f,0x8,0xf9,0x2e,0x49,
  0xc3,0xd3,0xdc,0xa9,0x3b,0xdc,0xad,0xd4,0x74,0xd5,0x6d,0xe8,0x8a,0xbb,0xd8,0xf4,
  0x4e,0x46,0x49,0xfd,0xce,0xed,0x7e,0x96,0x24,0xc5,0x6b,0x9f,0x9d,0x42,0xce,0x14,
  0x5c,0x58,0x9d,0x7d,0x77,0x7e,0xe,0xcd,0xd5,0xb5,0x46,0x64,0x65,0x12,0x1d,0x6d,
  0x8e,0xe3,0xe3,0x44,0xb2,0x21,0x15,0x26,0x27,0x85,0x1c,0x24,0x29,0x60,0x52,0xb0,
  0xc9,0x60,0xa,0x90,0xe4,0xae,0x46,0x34,0x3d,0x53,0x37,0xad,0x69,0x27,0x73,0x3b,
  0xca,0xcc,0x2d,0x37,0xa8,0xf3,0xca,0x62,0xeb,0x68,0xc4,0xef,0x1,0xf8,0xf4,0x31,
  0x40,0xef,0xad,0xd5,0xea,0xec,0x54,0xc,0xcf,0x8a,0xe4,0xf6,0x2f,0xbe,0xfd,0xf3,
  0xdd,0x28,0x3f,0x18,0x84,0x3f,0x44,0x69,0x31,0x30,0xc6,0x90,0x1,0x4,0x42,0x22,
  0x80,0x1c,0x8,0xfc,0xad,0x4c,0xfc,0xf6,0x10,0xe6,0x65,0x2f,0xab,0xe9,0x95,0x99,
  0x37,0x1b,0x53,0xca,0xea,0xf6,0x3a,0x84,0xdc,0x92,0xfd,0x9f,0xe,0xa6,0x4b,0x39,
  0x48,0x82,0x18,0xa9,0xe,0x71,0x90,0x25,0xbc,0x7e,0x6f,0x94,0xdc,0xda,0x3b,0xb9,
  0xf4,0xad,0xf9,0x27,0x96,0x4f,0xb3,0x8f,0xe7,0x5b,0xbd,0x8b,0xcb,0x95,0xeb,0x6b,
  0x9d,0x1a,0x27,0xf1,0x58,0xf6,0xd6,0xff,0x2a,0x57,0x51,0x3c,0xc,0x91,0x45,0x9,
  0xa2,0x20,0xc3,0x78,0x14,0x7f,0xff,0xac,0xce,0x1,0xe0,0xca,0xce,0xc9,0xe6,0xad,
  0xd,0xff,0xc6,0xee,0xaf,0xdb,0x88,0x87,0x63,0xa4,0x41,0x5c,0x6,0x10,0x33,0x40,
  0xa,0x4c,0x4c,0x3a,0xce,0xe2,0x49,0xcb,0xd1,0xc4,0x79,0x1a,0x45,0xb9,0x2a,0xa,
  0x81,0xb2,0x75,0xb9,0x4c,0x49,0x31,0x48,0x29,0xa8,0x9a,0x43,0xae,0x9e,0xfc,0x79,
  0xcc,0xaf,0x2d,0x90,0x55,0x23,0x30,0x33,0x29,0x4b,0x95,0x15,0x30,0x3f,0xac,0x76,
  0xd2,0x1a,0xd5,0x96,0x3b,0x31,0xc0,0x9b,0x6d,0x40,0xd9,0xd6,0x69,0x24,0xe8,0x9,
  0x2f,0x99,0x8,0x44,0x4,0x56,0x93,0x2b,0x20,0xc5,0x20,0x66,0x2,0x3d,0xe6,0xff,
  0x1c,0xe0,0xdc,0x2e,0x31,0x4d,0xe,0x60,0x6,0x3d,0xad,0x17,0xd1,0x29,0x99,0x98,
  0x60,0x55,0xed,0x89,0x1,0x96,0x63,0x13,0x29,0x55,0x6a,0x2c,0x67,0x49,0xd6,0x8e,
  0x5,0x20,0x3,0x29,0x5,0x6f,0xa1,0x35,0xb1,0x4,0x5d,0xd1,0x60,0xb2,0x60,0xf8,
  0x9,0xa,0xaa,0x53,0x35,0xb0,0xa5,0x50,0x84,0x21,0x8a,0x38,0x9d,0xb8,0x87,0x47,
  0x87,0xbe,0x68,0x4b,0x11,0x8,0x62,0x72,0x53,0x6,0x58,0xb5,0xa,0xec,0x5a,0x5,
  0x91,0x1f,0x4a,0xff,0x8f,0x7,0x13,0xc7,0xc8,0xdf,0xd8,0xd6,0x2c,0x45,0x21,0x49,
  0x82,0x68,0x18,0x96,0x1,0xdb,0x37,0xff,0x44,0x3a,0xf4,0x11,0x16,0xc,0x53,0xab,
  0x5c,0xfa,0x48,0xf1,0xd2,0xb3,0x3a,0xff,0x80,0x79,0xa9,0x55,0x95,0xd7,0x1d,0x4e,
  0xf3,0x51,0x3f,0x10,0x7f,0x9c,0x96,0x73,0x70,0xe7,0xbb,0xdf,0xd0,0xf1,0x96,0xd0,
  0x6e,0x57,0xc5,0x5a,0xf1,0xaa,0x2b,0x2e,0x7f,0x73,0xf5,0xf2,0xc5,0x1f,0xb7,0xd6,
  0x77,0x86,0xbb,0xfb,0x3e,0xc5,0x2,0x31,0x2,0x31,0xf,0xc7,0x1,0x9,0x81,0x35,
  0x91,0xb4,0x1c,0x55,0x7f,0xbb,0xe7,0xbe,0x71,0xa1,0xe7,0x71,0x11,0x67,0xe6,0xfe,
  0x7e,0xce,0x83,0x42,0xca,0x0,0x3,0x44,0x59,0x90,0xa2,0xb1,0x58,0x95,0xe6,0x4c,
  0x25,0x8b,0x8c,0xd1,0xe9,0xe0,0xf8,0xd5,0x7a,0x5b,0xc7,0xcb,0x85,0x33,0x1e,0xc,
  0xd3,0xed,0xa3,0x54,0xf6,0x6,0x22,0xc3,0x6,0xd1,0x54,0xdb,0x56,0x73,0xcd,0xba,
  0x9a,0xad,0x37,0x6c,0xa7,0x39,0xed,0xe4,0x27,0x11,0xd4,0xc6,0x6e,0x5c,0xbd,0xfb,
  0x20,0x54,0x9,0x70,0x58,0x2,0x2c,0x2c,0x77,0xaf,0xed,0x6c,0x9b,0x2b,0xfd,0x41,
  0xbf,0x9e,0xe6,0xec,0xe6,0xa1,0x58,0x14,0x17,0xb6,0x4e,0xf3,0x0,0x31,0x53,0x60,
  0x9c,0xd6,0x0,0xaa,0x18,0x81,0x1d,0x3,0xe3,0x89,0x31,0x53,0x51,0x46,0xcd,0x7c,
  0xc4,0x6e,0x1a,0xe7,0x5e,0xb8,0x15,0xb8,0x87,0x71,0xe6,0x1c,0xf8,0xc1,0xa8,0xb,
  0x7c,0x55,0x9a,0x68,0x0,0xf0,0x49,0x6f,0xba,0xf7,0xfb,0xfd,0xa3,0xf7,0x8f,0x9,
  0x2f,0x19,0x62,0x51,0x0,0x58,0x44,0x8,0x4,0x11,0x18,0x1,0x9d,0x1d,0x26,0x8,
  0x81,0xc0,0x5,0x4,0x39,0x88,0xa,0x31,0xa4,0x81,0x8d,0x26,0xf0,0xe5,0x17,0xff,
  0x35,0x32,0xff,0xb7,0x7f,0x15,0x7f,0xf,0x0,0x90,0x44,0xa0,0xd1,0x24,0xd1,0x76,
  0x60,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82
};
const unsigned char MediaPlayer::Data::iPlay[] = {
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x0,0x18,0x0,0x0,0x0,0x18,0x8,0x6,0x0,0x0,0x0,0xe0,0x77,0x3d,0xf8,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xb,0x13,0x0,0x0,0xb,0x13,
  0x1,0x0,0x9a,0x9c,0x18,0x0,0x0,0x0,0x20,0x63,0x48,0x52,0x4d,0x0,0x0,0x7a,
  0x25,0x0,0x0,0x80,0x83,0x0,0x0,0xf9,0xff,0x0,0x0,0x80,0xe9,0x0,0x0,0x75,
  0x30,0x0,0x0,0xea,0x60,0x0,0x0,0x3a,0x98,0x0,0x0,0x17,0x6f,0x92,0x5f,0xc5,
  0x46,0x0,0x0,0x3,0x5f,0x49,0x44,0x41,0x54,0x78,0xda,0xd4,0xd6,0xcb,0x6b,0x5c,
  0x55,0x18,0x0,0xf0,0x73,0xce,0x3d,0xf7,0x35,0x73,0xef,0xdc,0x4e,0xe7,0x3d,0x36,
  0x99,0x3c,0xc6,0x36,0x99,0x4e,0x62,0x4b,0x69,0x52,0x5,0x37,0x36,0x20,0x28,0x56,
  0x70,0xe1,0xa3,0x88,0x20,0xae,0xba,0x2a,0xdd,0xb5,0x14,0x44,0xb,0xea,0x22,0x8b,
  0x3a,0x5a,0x31,0x88,0x21,0x4,0xc1,0xad,0xa0,0x6e,0x5c,0x8,0x22,0x82,0xd6,0x57,
  0xb1,0xf8,0x68,0x84,0xf4,0xce,0x23,0xc9,0xcc,0x24,0x93,0xe4,0xde,0x99,0xb9,0x33,
  0xf7,0x75,0xce,0x71,0x17,0xd4,0x4c,0xdb,0x54,0x26,0xb,0xbf,0x3f,0xe0,0xfb,0xf1,
  0x3d,0xe,0xdf,0x81,0x8c,0x31,0xb0,0x9f,0x81,0xc0,0x3e,0xc7,0xe,0xf0,0xe4,0x33,
  0xef,0xc,0xe7,0xf2,0x57,0xb4,0x7d,0x3,0x5a,0xa6,0xcb,0xad,0x96,0x5a,0xa5,0x78,
  0xfc,0xd2,0xe5,0x67,0x5f,0x7a,0xbf,0x6f,0x10,0xfc,0xfb,0xc,0xc6,0x72,0xaf,0x5f,
  0xc7,0xf1,0xe6,0xd4,0xd1,0xc9,0xb8,0x99,0xcf,0x66,0x67,0x15,0x95,0xbf,0x76,0xe1,
  0xe5,0x33,0x66,0xdf,0x66,0xb0,0x7c,0x6b,0xfb,0x23,0x21,0xd6,0x6,0x52,0xa6,0x16,
  0x82,0x89,0xf2,0x15,0xa4,0xb4,0xf4,0xc2,0xe2,0x67,0x97,0xaf,0x2e,0x7c,0xaa,0xf5,
  0xa5,0x2,0xe,0x3e,0x1d,0x83,0x43,0xdd,0xea,0xc0,0x4c,0x97,0x4e,0x9d,0x48,0x3b,
  0x83,0x5a,0x86,0x45,0xf8,0x7,0x90,0x4c,0x62,0x1d,0x60,0xab,0x5,0x4a,0xd9,0x7d,
  0x57,0x4,0xff,0xbd,0xa6,0x9c,0xf2,0xe8,0xe7,0xc2,0xc9,0xc6,0x4c,0x68,0xd2,0x32,
  0x22,0x49,0xd4,0xc8,0x45,0x26,0xd8,0x11,0x6d,0x42,0x8e,0x89,0x83,0x2a,0xef,0x87,
  0x89,0x6f,0x5,0xe6,0x28,0x65,0x85,0xbd,0x42,0xbb,0x0,0x4,0x1f,0x39,0x8b,0xf3,
  0xc6,0xa2,0xfc,0x90,0xd5,0xe,0xe,0x1,0xe3,0xc0,0x41,0xb1,0x91,0x3a,0x10,0xac,
  0x8c,0x87,0x72,0x30,0x23,0x1d,0x4d,0x2b,0x20,0x99,0x80,0x8e,0x8a,0x9d,0xb6,0xf4,
  0xc1,0x5e,0xa0,0x1e,0xc0,0x63,0x32,0x37,0xd0,0x5e,0x93,0x4f,0x9a,0x4c,0xc8,0x92,
  0xe,0x17,0x12,0xec,0x80,0xca,0x6f,0x45,0xc3,0x62,0x31,0xa3,0x4,0x7e,0x1b,0xc7,
  0xf9,0x60,0x14,0x8d,0x4c,0x22,0x37,0x34,0x6a,0x9b,0x92,0xb8,0xb9,0xca,0x7d,0xb8,
  0x51,0xeb,0x14,0xe6,0xdf,0x7d,0xc5,0xdc,0x13,0x0,0x0,0x0,0x82,0xfa,0xc2,0xc2,
  0xc1,0xd3,0xfa,0x8c,0x30,0xd1,0x6c,0xd9,0xa,0xc7,0x13,0x2c,0x32,0x28,0xc8,0x9b,
  0x82,0x20,0x94,0x34,0x11,0x2d,0x8d,0xca,0xa8,0x94,0x65,0xa9,0x34,0xd7,0x89,0x9d,
  0xda,0x28,0xf1,0x99,0xa5,0x1f,0xfc,0xc0,0xcd,0x2f,0xc9,0xa2,0xe7,0x5a,0x5,0x9f,
  0xcd,0x99,0xf7,0x7c,0xc9,0xf,0x4f,0x9f,0xf8,0xf8,0x70,0xf2,0x88,0x17,0xd,0x48,
  0x75,0x51,0xe4,0xda,0x4,0xf2,0xc4,0xa1,0x2,0x6f,0x3a,0xa2,0xba,0xd2,0x96,0xb4,
  0x25,0xf,0x89,0x95,0x48,0xa5,0xb4,0x95,0xfe,0xf1,0xeb,0x8d,0xc8,0xb7,0x3f,0x59,
  0xa9,0x1b,0x75,0x25,0xaf,0x9f,0x3,0x10,0x17,0x63,0xd1,0x8b,0xaf,0x62,0x78,0x7e,
  0x67,0xeb,0x70,0x2f,0xe0,0xd8,0x74,0x2,0xf0,0x3,0xb6,0x7c,0xc3,0xbf,0x65,0x98,
  0xc8,0x13,0xb1,0x87,0x8,0x2f,0xa0,0x22,0x43,0xdc,0xf5,0xcd,0x96,0xf0,0xd5,0xc4,
  0x10,0xb5,0x34,0x80,0x86,0x57,0xca,0x64,0xbc,0x6a,0xb8,0xe9,0x2d,0xdb,0x8e,0xd8,
  0xc4,0x97,0x0,0xc,0x0,0xcc,0x87,0x84,0x63,0xd3,0x49,0x70,0x57,0x60,0xcb,0x30,
  0x9f,0x4f,0x8c,0x38,0x4,0x63,0x42,0x3,0x80,0x59,0x4a,0x88,0xdd,0x4e,0x44,0xc9,
  0x37,0x63,0x83,0xde,0x77,0x64,0x1b,0x35,0x7f,0xfe,0x95,0x9b,0xbc,0x59,0x45,0xa7,
  0x5b,0x6b,0x60,0xaa,0xab,0xb3,0x41,0x67,0x99,0x41,0x4f,0x87,0xef,0x41,0x60,0xcf,
  0x56,0xab,0x6f,0xfe,0xa3,0x45,0xbb,0x80,0x7,0xf,0xbf,0x26,0xf,0x9f,0x72,0x9f,
  0x62,0x9d,0xaa,0x49,0x42,0x36,0x97,0x56,0xb9,0x8d,0x43,0x49,0xa2,0x6b,0x12,0x71,
  0x7e,0xff,0x85,0x4d,0x2d,0xfd,0xe1,0x8e,0x1b,0x2b,0xde,0x71,0xb7,0xe2,0x8c,0x78,
  0xba,0x8f,0x7d,0x1d,0xcf,0x3,0x1a,0x98,0xa5,0xec,0x8b,0x9e,0x43,0xde,0x5,0x50,
  0xca,0xce,0x38,0x72,0x43,0xac,0xfb,0x65,0x8f,0x20,0x57,0x14,0x99,0xd8,0xad,0x2c,
  0xd3,0xe1,0xef,0x2b,0xfe,0xf1,0x9a,0x6e,0xa7,0x3a,0x45,0x12,0xf7,0x74,0x86,0x7c,
  0x1d,0x2d,0x0,0x1a,0xba,0x63,0xe2,0x3b,0x2,0x5a,0x9a,0xbc,0xd8,0xc6,0x35,0xd6,
  0x36,0x8b,0x10,0x3b,0x30,0x61,0x1b,0xe0,0x50,0xab,0x4a,0x95,0xce,0x8a,0xa7,0xba,
  0x65,0xe2,0xf9,0xb7,0xf9,0x79,0x40,0x83,0xf7,0x4c,0xdc,0x13,0x98,0x79,0xe2,0x6a,
  0xcc,0x92,0x6a,0x8f,0xd7,0xd7,0x75,0x1b,0x77,0x59,0xd4,0x37,0x31,0xe7,0xd6,0xa0,
  0xe0,0xaf,0xc1,0x8e,0x5f,0x16,0xe7,0xee,0xd6,0x8a,0x3d,0x1,0xfa,0x9f,0xc6,0x73,
  0x65,0x7e,0x95,0x47,0x16,0x80,0xa0,0x2b,0xc9,0x64,0x5d,0x6c,0xd2,0x35,0xe5,0x6d,
  0xc0,0xee,0x3f,0x71,0x4f,0xa0,0xa2,0x37,0xcf,0xd2,0xb0,0x0,0xe8,0xba,0x6a,0xb1,
  0x6d,0xfe,0x1a,0x60,0xd2,0x7f,0x4e,0xbc,0xb,0xc0,0xf0,0x7c,0x36,0x12,0xf,0xe4,
  0x1a,0xeb,0xe1,0x37,0x0,0x40,0xb3,0x94,0x7d,0x62,0xf6,0xe3,0xe0,0xec,0x0,0xf1,
  0x54,0x10,0x8c,0x8e,0x85,0x33,0xf5,0xfa,0x5b,0x66,0x3f,0x4f,0x26,0xfc,0xdf,0xff,
  0x2a,0xfe,0x1a,0x0,0x78,0x68,0xa6,0xb6,0xa,0xa5,0x6b,0x89,0x0,0x0,0x0,0x0,
  0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
};
const unsigned char MediaPlayer::Data::iPause[] = {
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x0,0x18,0x0,0x0,0x0,0x18,0x8,0x6,0x0,0x0,0x0,0xe0,0x77,0x3d,0xf8,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xb,0x13,0x0,0x0,0xb,0x13,
  0x1,0x0,0x9a,0x9c,0x18,0x0,0x0,0x0,0x20,0x63,0x48,0x52,0x4d,0x0,0x0,0x7a,
  0x25,0x0,0x0,0x80,0x83,0x0,0x0,0xf9,0xff,0x0,0x0,0x80,0xe9,0x0,0x0,0x75,
  0x30,0x0,0x0,0xea,0x60,0x0,0x0,0x3a,0x98,0x0,0x0,0x17,0x6f,0x92,0x5f,0xc5,
  0x46,0x0,0x0,0x3,0x8a,0x49,0x44,0x41,0x54,0x78,0xda,0xd4,0x96,0xcf,0x6f,0x1b,
  0x45,0x14,0xc7,0xbf,0x6f,0x76,0x76,0xd7,0x5d,0x6f,0x1a,0x3b,0xa8,0xa9,0xd4,0xb4,
  0x4d,0x5a,0xa1,0xf2,0x43,0x4d,0x25,0x24,0xa4,0x8a,0x96,0x33,0x20,0x45,0xd0,0x4b,
  0xe,0x5c,0x10,0x47,0x24,0x4,0xea,0x1,0x71,0xe4,0x4,0x7,0x4e,0xe5,0xe,0x7f,
  0x0,0x12,0x41,0x2a,0xaa,0xc4,0xa1,0x27,0x84,0x54,0x9,0x24,0xe,0x4,0x54,0x52,
  0x45,0x98,0xa4,0x69,0xd2,0xc4,0xb1,0x63,0xc7,0xb1,0xd7,0x6b,0xef,0xec,0xcc,0x7b,
  0x1c,0x22,0x90,0x1c,0x87,0xda,0x97,0x1e,0x98,0xeb,0x7e,0x66,0xbf,0x6f,0xde,0x77,
  0xde,0x7e,0x97,0x44,0x4,0x4f,0x73,0x29,0x3c,0xe5,0xa5,0xff,0xeb,0x81,0x47,0x37,
  0x16,0x8,0xe7,0x67,0x66,0x66,0x4b,0xab,0x1b,0xf,0x3f,0xfd,0xf1,0xd8,0xea,0xe8,
  0xf5,0x19,0xc2,0xf4,0xc2,0x99,0x73,0xb3,0xae,0xbe,0x93,0xde,0xee,0xe7,0xb7,0x9a,
  0x47,0x19,0x3a,0xae,0x45,0x8a,0xde,0x58,0x8a,0x5e,0x38,0xbb,0x18,0x9d,0xbb,0x0,
  0xf3,0x38,0x43,0xf2,0x47,0xf5,0x96,0x95,0x2f,0x3f,0x1a,0x2c,0x60,0xe1,0x15,0xaf,
  0x14,0xdc,0x8d,0x2f,0x5f,0x8a,0x83,0xb0,0x4c,0xad,0x5f,0xaa,0x75,0xdb,0xee,0x5e,
  0xb3,0xf2,0x55,0xe5,0x89,0x2,0x9a,0x6e,0x2e,0xc6,0x2f,0x15,0x96,0xa6,0x5e,0x9b,
  0x43,0x3c,0x53,0xca,0xb1,0xd9,0x73,0xe1,0x83,0x3,0xbf,0xfa,0x5b,0xe3,0xe5,0xcd,
  0x47,0x9f,0x2d,0xff,0xc3,0xf9,0xe1,0x7b,0x3f,0x9f,0x7e,0xf3,0xc2,0x95,0xf2,0xd5,
  0xb3,0xc2,0x2c,0x81,0xaa,0x74,0xf4,0x64,0xa5,0x7b,0xe7,0xde,0xf,0x1f,0xdf,0x78,
  0x62,0x8b,0xde,0x79,0x7f,0xfe,0x59,0x73,0xf1,0x24,0x1a,0x67,0xa,0x59,0x1a,0x7,
  0xc9,0x74,0xa9,0x8c,0x42,0x14,0x15,0x5c,0xb5,0xf7,0x22,0x80,0x7f,0x5,0xde,0xfe,
  0xe0,0xfa,0x3c,0x9e,0x7f,0xa6,0x5b,0x9b,0xe,0x8d,0x95,0xfc,0xc4,0xe4,0xc9,0x28,
  0x36,0xae,0x3e,0x3f,0xd2,0xe4,0x8b,0xcf,0x95,0x71,0x7a,0x3a,0x76,0x99,0xa3,0xd4,
  0x87,0x97,0x9c,0xc,0xb,0xdd,0x7a,0xcd,0x24,0x8f,0xd6,0xda,0x3,0xdc,0xe5,0x2b,
  0xa7,0x68,0x22,0x2c,0x24,0xe2,0xd0,0x9a,0x2a,0x44,0x5d,0x21,0xcf,0x2c,0xaf,0x34,
  0x68,0xa4,0xc9,0xb9,0x71,0xe8,0x74,0x8c,0xcd,0xb4,0xa4,0x93,0xb1,0x6e,0x2b,0xab,
  0x50,0xab,0x66,0x51,0xab,0xd9,0x1b,0xe0,0x4c,0x8f,0x4d,0x3b,0xe3,0x6,0xf9,0xd6,
  0x46,0x51,0x91,0x6a,0x3d,0x29,0x24,0x9d,0x84,0xc7,0x10,0x60,0x58,0x2d,0xd6,0x23,
  0xa4,0x21,0x7,0x7,0x81,0x23,0x65,0x13,0x16,0x60,0x70,0xaf,0xc9,0x5c,0x6e,0x53,
  0xda,0xf7,0xad,0x42,0x41,0x2,0x5,0x43,0x31,0xb1,0x93,0x91,0x2,0x22,0x2,0x12,
  0x38,0xed,0x54,0x2f,0x70,0x3a,0xf1,0x1d,0x3c,0xe4,0xf0,0x86,0xae,0x1f,0x73,0xae,
  0x73,0xd5,0xf6,0x99,0x10,0xb0,0xf2,0x3c,0xa6,0xc,0x4c,0x32,0xd6,0x1c,0x28,0x21,
  0x56,0xe2,0x19,0x1f,0xba,0xab,0xd9,0x69,0x31,0xec,0xf,0x41,0xcc,0x46,0xe5,0xd4,
  0xd1,0xac,0xc8,0x87,0x1f,0x2a,0x56,0xe6,0xb8,0xf7,0x1d,0x3b,0xc9,0x4,0x62,0xc5,
  0x2a,0x57,0xac,0x8c,0x7,0x32,0x2e,0xb3,0xe9,0x30,0xc5,0x39,0xe5,0xae,0x4d,0x42,
  0x99,0x86,0x97,0x93,0x90,0x3,0x20,0xe3,0x7d,0x2a,0x4,0x42,0x0,0x13,0x88,0x49,
  0xe0,0x84,0xe1,0x86,0x8b,0x10,0x16,0x96,0x9c,0x0,0x77,0xc8,0x82,0x21,0xe3,0xa,
  0x10,0x48,0x0,0x25,0x10,0x25,0x4,0x8f,0xd4,0xb0,0x7,0x2,0x52,0xa4,0xc8,0x17,
  0xc0,0x3b,0x64,0xa1,0x40,0xa0,0x31,0x4c,0x6,0x4,0xa2,0x58,0xb1,0xcf,0x8a,0x3,
  0x7,0xd1,0x2a,0xd0,0xd1,0x30,0x47,0xda,0x69,0x6f,0x42,0x48,0x94,0x85,0xf3,0x19,
  0xe2,0x1,0x32,0x5a,0xc0,0x59,0x86,0x71,0x8e,0x9c,0x8f,0x30,0x87,0x2d,0x1a,0x12,
  0xc5,0x1e,0x15,0x8e,0xb6,0xd7,0xe4,0xf0,0xfb,0xe2,0x8a,0x96,0xc8,0xcb,0x91,0x47,
  0x6,0xce,0x3f,0xc6,0x82,0x61,0x81,0xad,0x8d,0xe,0xea,0xd3,0xac,0xfa,0x33,0xba,
  0x68,0xb5,0x14,0x13,0x67,0x91,0xeb,0x74,0x2,0x47,0x6c,0xf8,0xab,0xd2,0xc1,0xde,
  0x14,0x4a,0x45,0x2f,0x26,0xa3,0x38,0xde,0xef,0x1b,0x9f,0x29,0xe3,0x91,0x1e,0xdc,
  0xf9,0xfa,0x4f,0x54,0xb6,0x76,0x75,0x4e,0x36,0x62,0x9f,0x27,0x1f,0x1e,0xb4,0xa2,
  0x54,0x76,0xcb,0x82,0x6c,0x80,0xbb,0xf7,0xd3,0x86,0x4a,0xb8,0x79,0x4a,0x85,0x61,
  0xd4,0xcc,0xfb,0xd1,0x41,0xba,0x3d,0x61,0x6d,0x67,0x74,0x8b,0xb2,0xac,0xe,0xd3,
  0x2f,0x7,0xf0,0xc2,0x42,0xb3,0xd7,0x28,0x57,0xf7,0xee,0xfb,0xdd,0xde,0xe3,0x89,
  0xa3,0xc7,0xef,0xf7,0x5b,0x11,0xcb,0x5c,0x6c,0xc0,0xe1,0xce,0x6e,0xa5,0xb4,0x5f,
  0xaf,0xc4,0xb6,0xd3,0x3a,0x18,0x29,0x40,0x88,0x2b,0x27,0xe,0x2,0xaf,0x55,0xa9,
  0x15,0xeb,0x1b,0xbb,0x61,0x7b,0x75,0x5d,0xf5,0xb7,0x1b,0x1a,0x98,0x5a,0x19,0xe0,
  0xda,0xe1,0x83,0x74,0x27,0xbd,0xb4,0xbe,0xfc,0x2b,0xb5,0x9a,0x6b,0x51,0xb2,0xb6,
  0x15,0xe4,0x35,0x73,0x7f,0xac,0xc0,0x99,0x9d,0xfb,0x64,0xa9,0x11,0xed,0x2e,0x72,
  0x54,0x13,0x5b,0x4b,0x60,0x37,0xbd,0x2f,0x58,0xee,0xe,0x4,0xce,0xd5,0xeb,0x9f,
  0xbf,0xfa,0xfb,0x6a,0xf5,0x7b,0x6f,0xae,0x16,0xdb,0xfe,0x3e,0xe5,0xeb,0xd9,0x1e,
  0xd2,0xa9,0x6b,0x4e,0xbe,0xad,0x8c,0x14,0x38,0x4c,0xac,0x77,0x17,0x80,0xfd,0xf3,
  0x80,0x5a,0x71,0xf2,0xdd,0xb1,0x91,0xa9,0xe9,0xc3,0x19,0xc1,0xf6,0x5b,0x40,0x66,
  0x80,0xe8,0xb6,0x93,0x6f,0xc6,0x8b,0xcc,0xff,0xd5,0x5f,0xc5,0xdf,0x3,0x0,0xa5,
  0xed,0xe5,0x58,0x69,0x95,0xd0,0xef,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,
  0x42,0x60,0x82
};
// Нет, только картинки.
